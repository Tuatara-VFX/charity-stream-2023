[gd_resource type="VisualShader" load_steps=61 format=3 uid="uid://c7ypa32yivbwl"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_5x260"]
constant = 0.123

[sub_resource type="VisualShaderNodeComment" id="VisualShaderNodeComment_jsr3l"]
size = Vector2(479.68, 214.05)
title = "Execution"
description = "Difference between Output and CustomOutput is execution order.
Check Generated Shader Code for illustration."

[sub_resource type="VisualShaderNodeComment" id="VisualShaderNodeComment_iiou1"]
size = Vector2(282.525, 28.436)
title = "2. Area of Effect"
description = "We use collider radius and sphere distance field to detect where to apply the effect.
We also remap the distance using the smoothstep function."

[sub_resource type="VisualShaderNodeComment" id="VisualShaderNodeComment_pycrb"]
size = Vector2(1318.22, 731.824)
title = "Collider Area of Effect"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_yu2b0"]
default_input_values = [0, 0.0, 1, 0.5]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ta8dq"]
operator = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_pojpu"]
input_name = "transform"

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_emf1y"]

[sub_resource type="VisualShaderNodeVectorLen" id="VisualShaderNodeVectorLen_vtath"]

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_chfv6"]

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_friyx"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_bw0s4"]
op_type = 0

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_7cs0b"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_ojt2o"]
parameter_name = "Collider_Radius_Remap"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_d82x0"]
parameter_name = "Collider_Radius"

[sub_resource type="VisualShaderNodeVec3Parameter" id="VisualShaderNodeVec3Parameter_cf6vf"]
parameter_name = "Collider_Position"

[sub_resource type="VisualShaderNodeVec3Parameter" id="VisualShaderNodeVec3Parameter_fdt7s"]
parameter_name = "Collider_Velocity"

[sub_resource type="VisualShaderNodeVectorLen" id="VisualShaderNodeVectorLen_6t14e"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_i6io6"]
function = 18

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_xcxxj"]
parameter_name = "Motion_Strength_Multiplier"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_18l3v"]
operator = 2

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_71agw"]
function = 31

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_4ct8t"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_k70ry"]
input_name = "custom"

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_yqhux"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ky8dn"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ynbki"]
input_name = "delta"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_uhlei"]
parameter_name = "Motion_Strength_Dissipation"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_hmf2b"]
operator = 6

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_o3xdu"]
operator = 1

[sub_resource type="VisualShaderNodeComment" id="VisualShaderNodeComment_51w34"]
size = Vector2(1265.74, 856.592)
title = "Collider Motion Strength"

[sub_resource type="VisualShaderNodeComment" id="VisualShaderNodeComment_y8x0i"]
title = "3. Motion Strength"
description = "Capture the collider velocity strength and use a multiplier to adjust it. Velocity strength is also affected by the area of effect.
Use the maximum function to apply dissipating strength when collider is not close to particle."

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_tuwc2"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_causq"]
input_name = "custom"

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_87nuc"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_nv6ow"]
input_name = "delta"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_icq2r"]
parameter_name = "Motion_Direction_Dissipation"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_mqms6"]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ojxcu"]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_cavuk"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_aqane"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_6tyhc"]
operator = 1

[sub_resource type="VisualShaderNodeComment" id="VisualShaderNodeComment_opkcj"]
size = Vector2(1612.4, 1089.04)
title = "Collider Motion Direction"

[sub_resource type="VisualShaderNodeComment" id="VisualShaderNodeComment_77xyr"]
title = "4. Motion Direction"
description = "Capture the collider motion direction using velocity (normalize).
Create subtracting vector then apply it on current direction. Lerp between collider velocity and current dissipating direction."

[sub_resource type="VisualShaderNodeComment" id="VisualShaderNodeComment_1oyvr"]
size = Vector2(1145.73, 432.713)
title = "Safe Normalize"
description = "Prevents division by 0."

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_h6dfh"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_8aqna"]
operator = 6

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_onelo"]
operator = 6

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_gcv54"]
function = 25

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_wo4w8"]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_sq0h3"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_xn41f"]
size = Vector2(288.513, 165.842)
expression = "float_min = 1.175494351e-9;"

[sub_resource type="VisualShaderNodeComment" id="VisualShaderNodeComment_7vb65"]
title = "Debug"
description = "Output values to Color for debug."

[sub_resource type="VisualShaderNodeComment" id="VisualShaderNodeComment_1532e"]
size = Vector2(479.68, 214.05)
title = "Execution"
description = "Difference between Output and CustomOutput is execution order.
Check Generated Shader Code for illustration."

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_po3ru"]
constant = 0.123

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_wteeh"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_kpp7d"]
input_name = "index"

[sub_resource type="VisualShaderNodeParticleRingEmitter" id="VisualShaderNodeParticleRingEmitter_g2lug"]
default_input_values = [0, 1.0, 1, 0.0, 2, 0.0]

[sub_resource type="VisualShaderNodeParticleRandomness" id="VisualShaderNodeParticleRandomness_qadm5"]
default_input_values = [1, 0.0, 2, 1.0]

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_gg2rq"]
parameter_name = "Particle_Size_Range"

[resource]
code = "shader_type particles;
uniform vec2 Particle_Size_Range;
uniform vec3 Collider_Velocity;
uniform float Motion_Direction_Dissipation;
uniform vec2 Collider_Radius_Remap;
uniform float Collider_Radius;
uniform vec3 Collider_Position;
uniform float Motion_Strength_Multiplier;
uniform float Motion_Strength_Dissipation;


float __rand_from_seed(inout uint seed) {
	int k;
	int s = int(seed);
	if (s == 0)
	s = 305420679;
	k = s / 127773;
	s = 16807 * (s - k * 127773) - 2836 * k;
	if (s < 0)
		s += 2147483647;
	seed = uint(s);
	return float(seed % uint(65536)) / 65535.0;
}

float __rand_from_seed_m1_p1(inout uint seed) {
	return __rand_from_seed(seed) * 2.0 - 1.0;
}

float __randf_range(inout uint seed, float from, float to) {
	return __rand_from_seed(seed) * (to - from) + from;
}

uint __hash(uint x) {
	x = ((x >> uint(16)) ^ x) * uint(73244475);
	x = ((x >> uint(16)) ^ x) * uint(73244475);
	x = (x >> uint(16)) ^ x;
	return x;
}

mat3 __build_rotation_mat3(vec3 axis, float angle) {
	axis = normalize(axis);
	float s = sin(angle);
	float c = cos(angle);
	float oc = 1.0 - c;
	return mat3(vec3(oc * axis.x * axis.x + c, oc * axis.x * axis.y - axis.z * s, oc * axis.z * axis.x + axis.y * s), vec3(oc * axis.x * axis.y + axis.z * s, oc * axis.y * axis.y + c, oc * axis.y * axis.z - axis.x * s), vec3(oc * axis.z * axis.x - axis.y * s, oc * axis.y * axis.z + axis.x * s, oc * axis.z * axis.z + c));
}

mat4 __build_rotation_mat4(vec3 axis, float angle) {
	axis = normalize(axis);
	float s = sin(angle);
	float c = cos(angle);
	float oc = 1.0 - c;
	return mat4(vec4(oc * axis.x * axis.x + c, oc * axis.x * axis.y - axis.z * s, oc * axis.z * axis.x + axis.y * s, 0), vec4(oc * axis.x * axis.y + axis.z * s, oc * axis.y * axis.y + c, oc * axis.y * axis.z - axis.x * s, 0), vec4(oc * axis.z * axis.x - axis.y * s, oc * axis.y * axis.z + axis.x * s, oc * axis.z * axis.z + c, 0), vec4(0, 0, 0, 1));
}

vec2 __get_random_unit_vec2(inout uint seed) {
	return normalize(vec2(__rand_from_seed_m1_p1(seed), __rand_from_seed_m1_p1(seed)));
}

vec3 __get_random_unit_vec3(inout uint seed) {
	return normalize(vec3(__rand_from_seed_m1_p1(seed), __rand_from_seed_m1_p1(seed), __rand_from_seed_m1_p1(seed)));
}

vec2 __get_random_point_on_ring2d(inout uint seed, float radius, float inner_radius) {
	float angle = __rand_from_seed(seed) * TAU;
	vec2 ring = vec2(sin(angle), cos(angle)) * __randf_range(seed, inner_radius, radius);
	return vec2(ring.x, ring.y);
}

vec3 __get_random_point_on_ring3d(inout uint seed, float radius, float inner_radius, float height) {
	float angle = __rand_from_seed(seed) * TAU;
	vec2 ring = vec2(sin(angle), cos(angle)) * __randf_range(seed, inner_radius, radius);
	return vec3(ring.x, __randf_range(seed, min(0.0, height), max(0.0, height)), ring.y);
}

vec2 __randv2_range(inout uint seed, vec2 from, vec2 to) {
	return vec2(__randf_range(seed, from.x, to.x), __randf_range(seed, from.y, to.y));
}

vec3 __randv3_range(inout uint seed, vec3 from, vec3 to) {
	return vec3(__randf_range(seed, from.x, to.x), __randf_range(seed, from.y, to.y), __randf_range(seed, from.z, to.z));
}

vec4 __randv4_range(inout uint seed, vec4 from, vec4 to) {
	return vec4(__randf_range(seed, from.x, to.x), __randf_range(seed, from.y, to.y), __randf_range(seed, from.z, to.z), __randf_range(seed, from.w, to.w));
}

void start() {
	uint __seed = __hash(NUMBER + uint(1) + RANDOM_SEED);

	{
// RingEmitter:12
		float n_in12p0 = 1.00000;
		float n_in12p1 = 0.00000;
		float n_in12p2 = 0.00000;
		vec3 n_out12p0 = __get_random_point_on_ring3d(__seed, n_in12p0, n_in12p1, n_in12p2);


// Input:11
		uint n_out11p0 = INDEX;


// Vector2Parameter:9
		vec2 n_out9p0 = Particle_Size_Range;


// VectorDecompose:10
		float n_out10p0 = n_out9p0.x;
		float n_out10p1 = n_out9p0.y;


// ParticleRandomness:13
		float n_out13p0 = __randf_range(n_out11p0, n_out10p0, n_out10p1);


// StartOutput:0
		if (RESTART_POSITION) {
			TRANSFORM = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(n_out12p0, 1.0));
			if (RESTART_VELOCITY) {
				VELOCITY = (EMISSION_TRANSFORM * vec4(VELOCITY, 0.0)).xyz;
			}
			TRANSFORM = EMISSION_TRANSFORM * TRANSFORM;
		}
		TRANSFORM *= mat4(vec4(n_out13p0, 0, 0, 0), vec4(0, n_out13p0, 0, 0), vec4(0, 0, n_out13p0, 0), vec4(0, 0, 0, 1));


	}
}

void process() {
	uint __seed = __hash(NUMBER + uint(1) + RANDOM_SEED);

	{
// Vector3Parameter:46
		vec3 n_out46p0 = Collider_Velocity;


		float n_out86p0;
// Expression:86
		n_out86p0 = 0.0;
		{
			n_out86p0 = 1.175494351e-9;
		}


// DotProduct:79
		float n_out79p0 = dot(n_out46p0, n_out46p0);


// FloatOp:80
		float n_in80p1 = 0.00000;
		float n_out80p0 = max(n_out79p0, n_in80p1);


// FloatOp:82
		float n_out82p0 = max(n_out86p0, n_out80p0);


// FloatFunc:83
		float n_out83p0 = inversesqrt(n_out82p0);


// VectorCompose:85
		vec3 n_out85p0 = vec3(n_out83p0, n_out83p0, n_out83p0);


// VectorOp:84
		vec3 n_out84p0 = n_out46p0 * n_out85p0;


// Input:64
		vec4 n_out64p0 = CUSTOM;


// VectorDecompose:65
		float n_out65p0 = n_out64p0.x;
		float n_out65p1 = n_out64p0.y;
		float n_out65p2 = n_out64p0.z;
		float n_out65p3 = n_out64p0.w;


// VectorCompose:71
		vec3 n_out71p0 = vec3(n_out65p0, n_out65p1, n_out65p2);


// Input:66
		float n_out66p0 = DELTA;


// FloatParameter:67
		float n_out67p0 = Motion_Direction_Dissipation;


// FloatOp:68
		float n_out68p0 = n_out66p0 * n_out67p0;


// VectorCompose:72
		vec3 n_out72p0 = vec3(n_out68p0, n_out68p0, n_out68p0);


// VectorOp:70
		vec3 n_out70p0 = n_out71p0 * n_out72p0;


// VectorOp:73
		vec3 n_out73p0 = n_out71p0 - n_out70p0;


// Vector2Parameter:42
		vec2 n_out42p0 = Collider_Radius_Remap;


// FloatParameter:43
		float n_out43p0 = Collider_Radius;


// FloatOp:33
		float n_in33p1 = 0.50000;
		float n_out33p0 = n_out43p0 * n_in33p1;


// VectorCompose:40
		vec2 n_out40p0 = vec2(n_out33p0, n_out33p0);


// VectorOp:41
		vec2 n_out41p0 = n_out42p0 + n_out40p0;


// VectorDecompose:39
		float n_out39p0 = n_out41p0.x;
		float n_out39p1 = n_out41p0.y;


// Input:35
		mat4 n_out35p0 = TRANSFORM;


// TransformVectorMult:36
		vec3 n_in36p1 = vec3(0.00000, 0.00000, 0.00000);
		vec3 n_out36p0 = (n_out35p0 * vec4(n_in36p1, 1.0)).xyz;


// Vector3Parameter:44
		vec3 n_out44p0 = Collider_Position;


// VectorOp:34
		vec3 n_out34p0 = n_out36p0 - n_out44p0;


// VectorLen:37
		float n_out37p0 = length(n_out34p0);


// SmoothStep:38
		float n_out38p0 = smoothstep(n_out39p0, n_out39p1, n_out37p0);


// Mix:63
		vec3 n_out63p0 = mix(n_out84p0, n_out73p0, vec3(n_out38p0));


// FloatFunc:51
		float n_out51p0 = 1.0 - n_out38p0;


// FloatParameter:49
		float n_out49p0 = Motion_Strength_Multiplier;


// VectorLen:47
		float n_out47p0 = length(n_out46p0);


// FloatFunc:48
		float n_out48p0 = min(max(n_out47p0, 0.0), 1.0);


// FloatOp:50
		float n_out50p0 = n_out49p0 * n_out48p0;


// FloatOp:52
		float n_out52p0 = n_out51p0 * n_out50p0;


// Input:53
		vec4 n_out53p0 = CUSTOM;


// VectorDecompose:54
		float n_out54p0 = n_out53p0.x;
		float n_out54p1 = n_out53p0.y;
		float n_out54p2 = n_out53p0.z;
		float n_out54p3 = n_out53p0.w;


// Input:56
		float n_out56p0 = DELTA;


// FloatParameter:57
		float n_out57p0 = Motion_Strength_Dissipation;


// FloatOp:55
		float n_out55p0 = n_out56p0 * n_out57p0;


// FloatOp:59
		float n_out59p0 = n_out54p3 - n_out55p0;


// FloatOp:58
		float n_out58p0 = max(n_out52p0, n_out59p0);


// CustomProcessOutput:0
		CUSTOM.rgb = n_out63p0;
		CUSTOM.a = n_out58p0;
		COLOR.rgb = vec3(n_out58p0);


	}
}

"
graph_offset = Vector2(-510, -329)
mode = 2
flags/collision_use_scale = false
flags/disable_force = false
flags/disable_velocity = false
flags/keep_data = false
nodes/start/9/node = SubResource("VisualShaderNodeVec2Parameter_gg2rq")
nodes/start/9/position = Vector2(-440, 360)
nodes/start/10/node = SubResource("VisualShaderNodeVectorDecompose_wteeh")
nodes/start/10/position = Vector2(-180, 360)
nodes/start/11/node = SubResource("VisualShaderNodeInput_kpp7d")
nodes/start/11/position = Vector2(-240, 280)
nodes/start/12/node = SubResource("VisualShaderNodeParticleRingEmitter_g2lug")
nodes/start/12/position = Vector2(-180, 100)
nodes/start/13/node = SubResource("VisualShaderNodeParticleRandomness_qadm5")
nodes/start/13/position = Vector2(20, 320)
nodes/start/connections = PackedInt32Array(9, 0, 10, 0, 12, 0, 0, 4, 11, 0, 13, 0, 10, 0, 13, 1, 10, 1, 13, 2, 13, 0, 0, 5)
nodes/process/0/position = Vector2(-280, 1320)
nodes/process/2/node = SubResource("VisualShaderNodeFloatConstant_5x260")
nodes/process/2/position = Vector2(-580, 1200)
nodes/process/3/node = SubResource("VisualShaderNodeComment_jsr3l")
nodes/process/3/position = Vector2(-620, 1080)
nodes/process_custom/0/position = Vector2(200, 1420)
nodes/process_custom/31/node = SubResource("VisualShaderNodeComment_iiou1")
nodes/process_custom/31/position = Vector2(-2140, -140)
nodes/process_custom/32/node = SubResource("VisualShaderNodeComment_pycrb")
nodes/process_custom/32/position = Vector2(-2140, -40)
nodes/process_custom/33/node = SubResource("VisualShaderNodeFloatOp_yu2b0")
nodes/process_custom/33/position = Vector2(-1800, 180)
nodes/process_custom/34/node = SubResource("VisualShaderNodeVectorOp_ta8dq")
nodes/process_custom/34/position = Vector2(-1460, 380)
nodes/process_custom/35/node = SubResource("VisualShaderNodeInput_pojpu")
nodes/process_custom/35/position = Vector2(-1980, 400)
nodes/process_custom/36/node = SubResource("VisualShaderNodeTransformVecMult_emf1y")
nodes/process_custom/36/position = Vector2(-1760, 380)
nodes/process_custom/37/node = SubResource("VisualShaderNodeVectorLen_vtath")
nodes/process_custom/37/position = Vector2(-1300, 400)
nodes/process_custom/38/node = SubResource("VisualShaderNodeSmoothStep_chfv6")
nodes/process_custom/38/position = Vector2(-1040, 80)
nodes/process_custom/39/node = SubResource("VisualShaderNodeVectorDecompose_friyx")
nodes/process_custom/39/position = Vector2(-1280, 60)
nodes/process_custom/40/node = SubResource("VisualShaderNodeVectorCompose_bw0s4")
nodes/process_custom/40/position = Vector2(-1640, 180)
nodes/process_custom/41/node = SubResource("VisualShaderNodeVectorOp_7cs0b")
nodes/process_custom/41/position = Vector2(-1440, 60)
nodes/process_custom/42/node = SubResource("VisualShaderNodeVec2Parameter_ojt2o")
nodes/process_custom/42/position = Vector2(-1720, 40)
nodes/process_custom/43/node = SubResource("VisualShaderNodeFloatParameter_d82x0")
nodes/process_custom/43/position = Vector2(-2080, 180)
nodes/process_custom/44/node = SubResource("VisualShaderNodeVec3Parameter_cf6vf")
nodes/process_custom/44/position = Vector2(-1820, 520)
nodes/process_custom/46/node = SubResource("VisualShaderNodeVec3Parameter_fdt7s")
nodes/process_custom/46/position = Vector2(-2380, 1140)
nodes/process_custom/47/node = SubResource("VisualShaderNodeVectorLen_6t14e")
nodes/process_custom/47/position = Vector2(-1260, 1120)
nodes/process_custom/48/node = SubResource("VisualShaderNodeFloatFunc_i6io6")
nodes/process_custom/48/position = Vector2(-1100, 1120)
nodes/process_custom/49/node = SubResource("VisualShaderNodeFloatParameter_xcxxj")
nodes/process_custom/49/position = Vector2(-1200, 940)
nodes/process_custom/50/node = SubResource("VisualShaderNodeFloatOp_18l3v")
nodes/process_custom/50/position = Vector2(-880, 1020)
nodes/process_custom/51/node = SubResource("VisualShaderNodeFloatFunc_71agw")
nodes/process_custom/51/position = Vector2(-880, 940)
nodes/process_custom/52/node = SubResource("VisualShaderNodeFloatOp_4ct8t")
nodes/process_custom/52/position = Vector2(-660, 1040)
nodes/process_custom/53/node = SubResource("VisualShaderNodeInput_k70ry")
nodes/process_custom/53/position = Vector2(-1280, 1240)
nodes/process_custom/54/node = SubResource("VisualShaderNodeVectorDecompose_yqhux")
nodes/process_custom/54/position = Vector2(-1000, 1220)
nodes/process_custom/55/node = SubResource("VisualShaderNodeFloatOp_ky8dn")
nodes/process_custom/55/position = Vector2(-960, 1400)
nodes/process_custom/56/node = SubResource("VisualShaderNodeInput_ynbki")
nodes/process_custom/56/position = Vector2(-1220, 1400)
nodes/process_custom/57/node = SubResource("VisualShaderNodeFloatParameter_uhlei")
nodes/process_custom/57/position = Vector2(-1240, 1480)
nodes/process_custom/58/node = SubResource("VisualShaderNodeFloatOp_hmf2b")
nodes/process_custom/58/position = Vector2(-460, 1100)
nodes/process_custom/59/node = SubResource("VisualShaderNodeFloatOp_o3xdu")
nodes/process_custom/59/position = Vector2(-780, 1320)
nodes/process_custom/60/node = SubResource("VisualShaderNodeComment_51w34")
nodes/process_custom/60/position = Vector2(-1560, 840)
nodes/process_custom/61/node = SubResource("VisualShaderNodeComment_y8x0i")
nodes/process_custom/61/position = Vector2(-1560, 740)
nodes/process_custom/63/node = SubResource("VisualShaderNodeMix_tuwc2")
nodes/process_custom/63/position = Vector2(-860, 2320)
nodes/process_custom/64/node = SubResource("VisualShaderNodeInput_causq")
nodes/process_custom/64/position = Vector2(-1960, 2440)
nodes/process_custom/65/node = SubResource("VisualShaderNodeVectorDecompose_87nuc")
nodes/process_custom/65/position = Vector2(-1680, 2420)
nodes/process_custom/66/node = SubResource("VisualShaderNodeInput_nv6ow")
nodes/process_custom/66/position = Vector2(-1900, 2620)
nodes/process_custom/67/node = SubResource("VisualShaderNodeFloatParameter_icq2r")
nodes/process_custom/67/position = Vector2(-1920, 2700)
nodes/process_custom/68/node = SubResource("VisualShaderNodeFloatOp_mqms6")
nodes/process_custom/68/position = Vector2(-1640, 2620)
nodes/process_custom/70/node = SubResource("VisualShaderNodeVectorOp_ojxcu")
nodes/process_custom/70/position = Vector2(-1280, 2520)
nodes/process_custom/71/node = SubResource("VisualShaderNodeVectorCompose_cavuk")
nodes/process_custom/71/position = Vector2(-1480, 2420)
nodes/process_custom/72/node = SubResource("VisualShaderNodeVectorCompose_aqane")
nodes/process_custom/72/position = Vector2(-1480, 2600)
nodes/process_custom/73/node = SubResource("VisualShaderNodeVectorOp_6tyhc")
nodes/process_custom/73/position = Vector2(-1080, 2380)
nodes/process_custom/74/node = SubResource("VisualShaderNodeComment_opkcj")
nodes/process_custom/74/position = Vector2(-2160, 1800)
nodes/process_custom/75/node = SubResource("VisualShaderNodeComment_77xyr")
nodes/process_custom/75/position = Vector2(-2160, 1700)
nodes/process_custom/77/node = SubResource("VisualShaderNodeComment_1oyvr")
nodes/process_custom/77/position = Vector2(-2100, 1880)
nodes/process_custom/79/node = SubResource("VisualShaderNodeDotProduct_h6dfh")
nodes/process_custom/79/position = Vector2(-2020, 2180)
nodes/process_custom/80/node = SubResource("VisualShaderNodeFloatOp_8aqna")
nodes/process_custom/80/position = Vector2(-1860, 2160)
nodes/process_custom/82/node = SubResource("VisualShaderNodeFloatOp_onelo")
nodes/process_custom/82/position = Vector2(-1700, 2080)
nodes/process_custom/83/node = SubResource("VisualShaderNodeFloatFunc_gcv54")
nodes/process_custom/83/position = Vector2(-1540, 2080)
nodes/process_custom/84/node = SubResource("VisualShaderNodeVectorOp_wo4w8")
nodes/process_custom/84/position = Vector2(-1140, 1960)
nodes/process_custom/85/node = SubResource("VisualShaderNodeVectorCompose_sq0h3")
nodes/process_custom/85/position = Vector2(-1340, 2080)
nodes/process_custom/86/node = SubResource("VisualShaderNodeExpression_xn41f")
nodes/process_custom/86/position = Vector2(-2020, 1980)
nodes/process_custom/86/size = Vector2(288.513, 165.842)
nodes/process_custom/86/input_ports = ""
nodes/process_custom/86/output_ports = "0,0,float_min;"
nodes/process_custom/86/expression = "float_min = 1.175494351e-9;"
nodes/process_custom/87/node = SubResource("VisualShaderNodeComment_7vb65")
nodes/process_custom/87/position = Vector2(120, 1340)
nodes/process_custom/88/node = SubResource("VisualShaderNodeComment_1532e")
nodes/process_custom/88/position = Vector2(120, 1120)
nodes/process_custom/89/node = SubResource("VisualShaderNodeFloatConstant_po3ru")
nodes/process_custom/89/position = Vector2(160, 1240)
nodes/process_custom/connections = PackedInt32Array(43, 0, 33, 0, 33, 0, 40, 0, 33, 0, 40, 1, 36, 0, 34, 0, 34, 0, 37, 0, 44, 0, 34, 1, 35, 0, 36, 0, 37, 0, 38, 2, 42, 0, 41, 0, 39, 0, 38, 0, 39, 1, 38, 1, 41, 0, 39, 0, 40, 0, 41, 1, 47, 0, 48, 0, 49, 0, 50, 0, 48, 0, 50, 1, 52, 0, 58, 0, 53, 0, 54, 0, 54, 3, 59, 0, 55, 0, 59, 1, 56, 0, 55, 0, 57, 0, 55, 1, 59, 0, 58, 1, 38, 0, 51, 0, 51, 0, 52, 0, 50, 0, 52, 1, 46, 0, 47, 0, 64, 0, 65, 0, 66, 0, 68, 0, 67, 0, 68, 1, 65, 0, 71, 0, 65, 1, 71, 1, 65, 2, 71, 2, 71, 0, 70, 0, 68, 0, 72, 0, 68, 0, 72, 1, 68, 0, 72, 2, 72, 0, 70, 1, 71, 0, 73, 0, 70, 0, 73, 1, 38, 0, 63, 2, 73, 0, 63, 1, 46, 0, 79, 0, 46, 0, 79, 1, 79, 0, 80, 0, 80, 0, 82, 1, 46, 0, 84, 0, 83, 0, 85, 0, 83, 0, 85, 1, 83, 0, 85, 2, 85, 0, 84, 1, 82, 0, 83, 0, 86, 0, 82, 0, 84, 0, 63, 0, 58, 0, 0, 1, 63, 0, 0, 0, 58, 0, 0, 3)
